
dnl To rebuild the `configure' script from this, execute the command
dnl     autoconf
dnl in the directory containing this script.
dnl
dnl by Gary Wong <gtw@gnu.org>, 1999, 2000, 2001.
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation, version 2.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

AC_REVISION($Revision: 1.160 $)
AC_INIT([GNU Backgammon],[0.16-devel],[bug-gnubg@gnu.org],[gnubg])
AC_CONFIG_SRCDIR(gnubg.c)
AM_INIT_AUTOMAKE
AC_CONFIG_HEADERS([config.h])

dnl
dnl parse default options
dnl

if test -f config.options
then
  . ./config.options
fi

dnl
dnl host specifics
dnl 

darwinppc=no
win32=no
AC_MSG_CHECKING([for host])
case "$host" in
  powerpc-apple-darwin*)
    LDFLAGS="$LDFLAGS -L/sw/lib -bind_at_load"
    LIBS="$LIBS -lmx -lstdc++"
    darwinppc=yes;
    ;;
  *-*-mingw*)
    win32=yes
    CFLAGS="$CFLAGS -mms-bitfields"
    ;;
esac
AC_MSG_RESULT([$host])

dnl
dnl Compiler setup
dnl

AC_GNU_SOURCE
AC_PROG_CC
AM_CONDITIONAL(CROSS_COMPILING, test "$cross_compiling" = "yes")


dnl
dnl Checks for programs.
dnl

AC_PROG_AWK
AC_PROG_LN_S
AC_CHECK_PROG(CSOUND, csound, csound, true)
AC_CHECK_PROG(GNUPLOT, gnuplot, gnuplot)
AC_CHECK_PROG(PNGTOPNM, pngtopnm, pngtopnm)
AC_CHECK_PROG(PNMSCALE, pnmscale, pnmscale)
AC_CHECK_PROG(PNMTOPNG, pnmtopng, pnmtopng)
AC_CHECK_PROG(PNMTOPS, pnmtops, pnmtops)
AC_CHECK_PROG(PSTOPNM, pstopnm, pstopnm)
AC_CHECK_PROG(SRCONV, srconv, srconv, true)
AC_CHECK_PROG(TR, tr, tr)

dnl
dnl Setup libtool
dnl

AC_DISABLE_SHARED
AC_PROG_LIBTOOL

dnl
dnl yacc and lex setup
dnl

AC_PROG_YACC
AM_PROG_LEX
AM_YFLAGS='-d'
AC_SUBST(AM_YFLAGS)


dnl
dnl check for pkg-config controlled libs
dnl

PKG_CHECK_MODULES(GLIB, [glib-2.0 >= 2.6.0], , [AC_MSG_ERROR("You need to have glib2 to compile GNU backgammon")])
PKG_CHECK_MODULES(LIBXML2, libxml-2.0, AC_DEFINE(HAVE_LIBXML2,1,Define if you want to use libxml2 to parse XML.), [])
PKG_CHECK_MODULES(FREETYPE2, [freetype2], AC_DEFINE(HAVE_FREETYPE, 1, Define if you have freetype2), [])
PKG_CHECK_MODULES(LIBPNG, [libpng12], AC_DEFINE(HAVE_LIBPNG, 1, Define if you have libpng), [])

dnl
dnl Checks for libraries.
dnl

AC_CHECK_LIB(m,sqrt)
AC_CHECK_LIB(dl,dlopen)
AC_CHECK_LIB(readline,readline)
AC_CHECK_LIB(gmp, __gmpz_import)
AC_SEARCH_LIBS(gethostbyname,nsl)
AC_SEARCH_LIBS(inet_aton,resolv)
AC_SEARCH_LIBS(connect,socket,AC_DEFINE(HAVE_SOCKETS,1,Define if the system supports AF_LOCAL sockets.))

dnl
dnl Checks for header files.
dnl

AC_CHECK_HEADERS(limits.h sys/mman.h sys/resource.h sys/socket.h sys/stat.h sys/time.h sys/types.h sys/uio.h unistd.h sys/wait.h sys/utsname.h stropts.h)

dnl
dnl Checks for typedefs, structures, and compiler characteristics.
dnl

AC_C_INLINE
AC_TYPE_SIGNAL
AC_TYPE_SIZE_T
AC_CHECK_TYPE(socklen_t,,
              AC_DEFINE(socklen_t,int, [Define to int if <sys/socket.h> does not define.])
              ,[
                #ifdef HAVE_SYS_TYPES_H
                #include <sys/types.h>
                #endif
                #ifdef HAVE_SYS_SOCKET_H
                #include <sys/socket.h>
                #endif

                ])

dnl
dnl Checks for library functions.
dnl

AC_FUNC_MMAP
AC_CHECK_FUNCS(sigaction sigvec,break)
AC_CHECK_FUNCS(sigprocmask sigblock,break)
AC_CHECK_FUNCS(fork fstat getdtablesize gettimeofday isatty random readv select setvbuf setpriority)

AC_CHECK_FUNCS(acosf, , AC_DEFINE(acosf, acos, [set acosf to acos if undefined]),)
AC_CHECK_FUNCS(asinf, , AC_DEFINE(asinf, asin, [set asinf to asin if undefined]),)
AC_CHECK_FUNCS(atanf, , AC_DEFINE(atanf, atan, [set atanf to atan if undefined]),)
AC_CHECK_FUNCS(cosf, , AC_DEFINE(cosf, cos, [set cosf to cos if undefined]),)
AC_CHECK_FUNCS(sinf, , AC_DEFINE(sinf, sin, [set sinf to sin if undefined]),)
AC_CHECK_FUNCS(tanf, , AC_DEFINE(tanf, tan, [set tanf to tan if undefined]),)

AC_REPLACE_FUNCS(erf)

dnl
dnl Checks for declarations
dnl

AC_CHECK_DECLS(signbit, , ,[#include <math.h>]) 
AC_CHECK_DECLS(lrint, , , [#include <math.h>])

dnl *******************
dnl optional components
dnl *******************

dnl
dnl Check for gtk and gtkglext
dnl

no_gtk="yes"
no_board3d="yes"
no_gtkglext="yes"
no_libcairo="yes"
AC_ARG_WITH(gtk,[  --with-gtk             use GTK+ 2.0])
AC_ARG_WITH(board3d,[  --with-board3d         compile with 3D boards])
if test "$with_gtk" != "no"; then
  no_gtk="no"
  PKG_CHECK_MODULES(GTK, [gtk+-2.0 >= 2.6.0], AC_DEFINE(USE_GTK, 1, Define if you want to use the gtk gui), no_gtk=yes)
  PKG_CHECK_MODULES(CAIRO, [cairo >= 0.9.0], AC_DEFINE(HAVE_CAIRO,1,Define if you want to use libcairo), no_libcairo=yes)
  if test  "$with_board3d" != "no"; then
    no_board3d="no"
    PKG_CHECK_MODULES(GTKGLEXT, [gtkglext-1.0 >= 1.0], AC_DEFINE(USE_BOARD3D,1,[Define if you want to use the 3d boards]), no_board3d="yes")
  fi
fi
AM_CONDITIONAL(USE_GTK, test "$no_gtk" != "yes" )
AM_CONDITIONAL(USE_BOARD3D, test "$no_board3d" != "yes" )

dnl
dnl Check for Python
dnl

AZ_PYTHON_WITH()
if test "$with_python" != "no"; then
  AZ_PYTHON_PATH()
  AZ_PYTHON_VERSION_ENSURE([2.2])
  AC_DEFINE(USE_PYTHON,1,[Define if you want to use Python inside gnubg])
fi
AZ_PYTHON_CSPEC
AZ_PYTHON_LSPEC
AM_CONDITIONAL(USE_PYTHON, test "$no_python" != "yes" )

dnl
dnl obsolete: bearoff database
dnl

bearoff_database=external
AM_CONDITIONAL(EXTERNAL_BR1, test "$bearoff_database" = "external")
AM_CONDITIONAL(COMPILE_BR1, test "$bearoff_database" = "static")
if test "$bearoff_database" = "static"; then
  AC_DEFINE(USE_BUILTIN_BEAROFF,1,[Define if you have a bearoff database to link to GNU Backgammon])
fi


dnl
dnl Sounds
dnl

AC_ARG_WITH(sound,[  --with-sound            use sounds with GNU Backgammon])

AM_CONDITIONAL(USE_SOUND, test "$with_sound" != "no" )
if test "$with_sound" != "no"; then

  AC_CHECK_HEADERS(sys/audioio.h  sys/soundcard.h)

  AC_DEFINE(USE_SOUND,1,Define if you want to use sounds with GNU Backgammon)
  if test "$win32" != "yes"; then
    AM_PATH_ESD(,AC_DEFINE(HAVE_ESD,1,[Define if you have the ESD sound system]))
    AM_PATH_ARTSC(,AC_DEFINE(HAVE_ARTSC,1,[Define if you have ArtsC sound system]))

    AM_PATH_AUDIOFILE(0.2.0,AC_DEFINE(HAVE_AUDIOFILE,1, [Define if you have the audiofile library]))
    AC_CHECK_LIB(audiofile,_af_ulaw2linear,AC_DEFINE(HAVE_AF_ULAW2LINEAR,1,[Define if your version of audiofile has _af_u2law2linear]))

    if test "$darwinppc" = "yes"; then
      APPLE_QTIME_LIBS="-framework QuickTime"
    fi

  else
    AC_DEFINE(USE_WINMMSND,1,Define if you wish to use the Win32 WINMM sound system)
    WINMMSND_LIBS="-lwinmm"
    WINMMSND_CFLAGS=
  fi
fi
AM_CONDITIONAL(HAVE_WINMMSND, test "$win32" != "no" )
AC_SUBST(WINMMSND_LIBS)
AC_SUBST(WINMMSND_CFLAGS)
AC_SUBST(APPLE_QTIME_LIBS)

dnl
dnl Clocks
dnl

AC_ARG_WITH(timecontrol,[  --with-timecontrol	enable clocks])
AM_CONDITIONAL(USE_TIMECONTROL, test "$with_timecontrol" != "no" )
if test "$with_timecontrol" != "no"; then
  AC_DEFINE(USE_TIMECONTROL,1,[Define if you want to use time controls (eg. clocks) with GNU Backgammon])
fi

dnl
dnl SSE
dnl

SSE_CFLAGS=''
AC_ARG_ENABLE( sse, [  --enable-sse=TYPE  enable SSE for newer cpus(TYPE=yes,no,cputest)], ssecpu=$enableval, ssecpu=cputest)
if test "$ssecpu" != "no"; then
        AC_DEFINE(USE_SSE_VECTORIZE,1,Define if you want to compile with SSE support)
        if test "$ssecpu" = "yes"; then
                AC_DEFINE(DISABLE_SSE_TEST, 1, Define if you want to disable the SSE cpu test)
        fi
        if test x"$GCC" = xyes; then
                SSE_CFLAGS="-msse"
        fi
fi

AC_SUBST(SSE_CFLAGS)


dnl *************
dnl Misc. setings
dnl *************

dnl
dnl Record installation paths.
dnl

AC_DEFINE_DIR([_DATADIR], [datadir],
              [Installation directory (used to determine PKGDATADIR below).])
AC_DEFINE([PKGDATADIR],[_DATADIR "/" PACKAGE],
          [The directory where the weights and databases will be stored.])

dnl
dnl internationalization macros
dnl
AM_GNU_GETTEXT([external])

dnl
dnl config files
dnl

AC_CONFIG_FILES([Makefile doc/Makefile lib/Makefile met/Makefile po/Makefile.in po/Makefile m4/Makefile xpm/Makefile sounds/Makefile board3d/Makefile textures/Makefile scripts/Makefile flags/Makefile fonts/Makefile non-src/Makefile])

dnl
dnl
dnl

AC_OUTPUT
