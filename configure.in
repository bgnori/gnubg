
dnl To rebuild the `configure' script from this, execute the command
dnl     autoconf
dnl in the directory containing this script.
dnl
dnl by Gary Wong <gtw@gnu.org>, 1999, 2000, 2001.
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation, version 3 or later.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

AC_REVISION($Revision: 1.189 $)
AC_INIT([GNU Backgammon],[0.9.0],[bug-gnubg@gnu.org],[gnubg])
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CONFIG_SRCDIR(gnubg.c)
AM_INIT_AUTOMAKE
AC_CONFIG_HEADERS([config.h])

dnl
dnl parse default options
dnl

if test -f config.options; then
  . ./config.options
fi

dnl
dnl host specifics
dnl

win32=no

AC_MSG_CHECKING([for host])
case "$host" in
  *-*-mingw*)
    win32=yes
    CFLAGS="$CFLAGS -mms-bitfields"
    LDFLAGS="$LDFLAGS -lwinmm"
    ;;
  *-*-darwin*)
   LDFLAGS="$LDFLAGS -dylib_file /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib:/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib -framework QuickTime `/opt/local/bin/pkg-config --libs glib-2.0`"
    ;;
esac
AC_MSG_RESULT([$host])

dnl
dnl Compiler setup
dnl

AC_GNU_SOURCE
AC_PROG_CC
AM_CONDITIONAL(CROSS_COMPILING, test "x$cross_compiling" = "xyes")


dnl
dnl Checks for programs.
dnl

AC_PROG_AWK
AC_PROG_LN_S
AC_CHECK_PROGS(DOCBOOK2TEXI, docbook2x-texi db2x_docbook2texi, false)
AC_CHECK_PROGS(DOCBOOK2MAN, docbook2x-man db2x_docbook2man, false)
AC_CHECK_PROGS(DBLATEX, dblatex, false)
AC_CHECK_PROGS(XSLTPROC, xsltproc, false)
AC_ARG_VAR([DOCBOOK2TEXI], [path for docbook2texi from docbook2x package])
AC_ARG_VAR([DOCBOOK2MAN], [path for docbook2man from docbook2x package])
AC_ARG_VAR([DBLATEX], [path for dblatex used to build pdf documentation])
AC_ARG_VAR([XSLTPROC], [path for xsltproc used to build html documentation])

dnl
dnl Setup libtooltexi
dnl

AC_DISABLE_SHARED
AC_PROG_LIBTOOL

dnl
dnl yacc and lex setup
dnl

AC_PROG_YACC
AM_PROG_LEX
AM_YFLAGS='-d'
AC_SUBST(AM_YFLAGS)


dnl
dnl check for pkg-config controlled libs
dnl

PKG_CHECK_MODULES(GLIB, [glib-2.0 >= 2.6.0], , [AC_MSG_ERROR("You need to have glib2 to compile GNU backgammon")])
PKG_CHECK_MODULES(GTHREAD, [gthread-2.0], have_gthread="yes", [AC_MSG_WARN("No thread support in glib")])
PKG_CHECK_MODULES(LIBXML2, libxml-2.0, AC_DEFINE(HAVE_LIBXML2,1,Define if you want to use libxml2 to parse XML.), [])
PKG_CHECK_MODULES(FREETYPE2, [freetype2], AC_DEFINE(HAVE_FREETYPE, 1, Define if you have freetype2), [])
PKG_CHECK_MODULES(LIBPNG, [libpng12], AC_DEFINE(HAVE_LIBPNG, 1, Define if you have libpng), [])
PKG_CHECK_MODULES(CAIRO, [cairo >= 1.2], AC_DEFINE(HAVE_CAIRO,1,Define if you want to use libcairo), [AC_MSG_WARN("No cairo support")])
PKG_CHECK_MODULES(PANGOCAIRO, [pangocairo >= 1.0], AC_DEFINE(HAVE_PANGOCAIRO,1,Define if you want to use pangocairo), [AC_MSG_WARN("No pangocairo support")])
PKG_CHECK_MODULES(SQLITE, [sqlite3], AC_DEFINE(HAVE_SQLITE,1,Define if you want to use sqlite), [AC_MSG_WARN("No sqlite support")])
PKG_CHECK_MODULES(GSTREAMER, [gstreamer-0.10], AC_DEFINE(HAVE_GSTREAMER,1,Define if you want to use gstreamer), [AC_MSG_WARN("No gstreamer support")])

dnl
dnl Checks for libraries.
dnl

AC_CHECK_LIB(m,sqrt)
AC_CHECK_LIB(dl,dlopen)
AC_CHECK_LIB(gmp, __gmpz_import)
AC_SEARCH_LIBS(gethostbyname,nsl)
AC_SEARCH_LIBS(inet_aton,resolv)
AC_SEARCH_LIBS(connect,socket,AC_DEFINE(HAVE_SOCKETS,1,Define if the system supports AF_LOCAL sockets.))

dnl
dnl Check for readline
dnl

bcrl=n
AC_CHECK_LIB(ncurses,tparm,TERMLIB=-lncurses, AC_CHECK_LIB(termcap,tgetent,TERMLIB=-ltermcap))
LDSAVE=$LDFLAGS
LDFLAGS="$LDFLAGS $TERMLIB"
AC_CHECK_LIB(readline,readline,
             [AC_CHECK_HEADER(readline/readline.h,
              READLINELIB="-lreadline $TERMLIB";bcrl=y)],
              READLINELIB="")
if test "$bcrl" = "y" ; then
    AC_DEFINE([HAVE_LIBREADLINE],1,Define if you have libreadline)
    fi
LDFLAGS="$LDSAVE $READLINELIB"

dnl
dnl Checks for header files.
dnl

AC_CHECK_HEADERS(limits.h sys/mman.h sys/resource.h sys/socket.h sys/stat.h sys/time.h sys/types.h sys/uio.h unistd.h sys/wait.h sys/utsname.h stropts.h)

dnl
dnl Checks for typedefs, structures, and compiler characteristics.
dnl

AC_C_INLINE
AC_TYPE_SIGNAL
AC_TYPE_SIZE_T
AC_CHECK_TYPE(socklen_t,,
              AC_DEFINE(socklen_t,int, [Define to int if <sys/socket.h> does not define.])
              ,[
                #ifdef HAVE_SYS_TYPES_H
                #include <sys/types.h>
                #endif
                #ifdef HAVE_SYS_SOCKET_H
                #include <sys/socket.h>
                #endif

                ])

dnl
dnl Checks for library functions.
dnl

AC_FUNC_MMAP
AC_CHECK_FUNCS(sigaction sigvec,break)
AC_CHECK_FUNCS(sigprocmask sigblock,break)
AC_CHECK_FUNCS(getdtablesize strptime isatty random select setvbuf setpriority)


dnl
dnl Checks for declarations
dnl

AC_CHECK_DECLS(signbit,, AC_DEFINE([signbit(x)], [((x) < 0.0)], [define signbit]), [#include <math.h>])
AC_CHECK_DECLS(lrint,, AC_DEFINE([lrint(x)], [((long) ((x)+0.5))], [define lrint]), [#include <math.h>])
AC_CHECK_DECLS(acosf,, AC_DEFINE(acosf, acos, [set acosf to acos if undefined]), [#include <math.h>])
AC_CHECK_DECLS(asinf,, AC_DEFINE(asinf, asin, [set asinf to asin if undefined]), [#include <math.h>])
AC_CHECK_DECLS(atanf,, AC_DEFINE(atanf, atan, [set atanf to atan if undefined]), [#include <math.h>])
AC_CHECK_DECLS(cosf,, AC_DEFINE(cosf, cos, [set cosf to cos if undefined]), [#include <math.h>])
AC_CHECK_DECLS(sinf,, AC_DEFINE(sinf, sin, [set sinf to sin if undefined]), [#include <math.h>])
AC_CHECK_DECLS(tanf,, AC_DEFINE(tanf, tan, [set tanf to tan if undefined]), [#include <math.h>])

dnl *******************
dnl optional components
dnl *******************

dnl
dnl Check for gtk and gtkglext
dnl

no_gtk="yes"
no_board3d="yes"
no_gtkglext="yes"
AC_ARG_WITH(gtk,[  --with-gtk             use GTK+ 2.0 (Default if found)])
AC_ARG_WITH(board3d,[  --with-board3d         compile with 3D boards (Default if found)])
if test "$with_gtk" != "no"; then
  no_gtk="no"
  PKG_CHECK_MODULES(GTK, [gtk+-2.0 >= 2.6.0], AC_DEFINE(USE_GTK, 1, Define if you want to use the gtk gui), no_gtk=yes)
  if test  "$with_board3d" != "no"; then
    no_board3d="no"
    PKG_CHECK_MODULES(GTKGLEXT, [gtkglext-1.0 >= 1.0], AC_DEFINE(USE_BOARD3D,1,[Define if you want to use the 3d boards]), no_board3d="yes")
  fi
fi
AM_CONDITIONAL(USE_GTK, test "$no_gtk" != "yes" )
AM_CONDITIONAL(USE_BOARD3D, test "$no_board3d" != "yes" )

dnl
dnl Check for Python
dnl

AZ_PYTHON_DEFAULT()
AZ_PYTHON_WITH()
AZ_PYTHON_VERSION_ENSURE([2.2])
AZ_PYTHON_CSPEC
AZ_PYTHON_LSPEC
if test "x$az_python_cspec" != "x"; then
        AC_DEFINE(USE_PYTHON,1,[Define if you want to use Python inside gnubg])
        AM_CONDITIONAL(USE_PYTHON, test "$no_python" != "yes" )
fi

dnl
dnl SSE
dnl

SSE_CFLAGS=''
AC_ARG_ENABLE( sse, [  --enable-sse=TYPE  enable SSE for newer cpus(TYPE=yes,no,cputest, default cputest)], ssecpu=$enableval, ssecpu=cputest)
if test "$ssecpu" != "no"; then
        AC_DEFINE(USE_SSE_VECTORIZE,1,Define if you want to compile with SSE support)
        if test "$ssecpu" = "yes"; then
                AC_DEFINE(DISABLE_SSE_TEST, 1, Define if you want to disable the SSE cpu test)
        fi
        if test x"$GCC" = xyes; then
                SSE_CFLAGS="-msse"
        fi
fi

AC_SUBST(SSE_CFLAGS)

dnl
dnl Threads
dnl

AC_ARG_ENABLE( threads, [  --enable-threads  enable multithread support (Default disabled)], threadson=$enableval, threadson=no)
AM_CONDITIONAL(USE_MULTITHREAD, test "$threadson" != "no" )
if test "$threadson" != "no"; then
        if test "$have_gthread" != "yes"; then
                AC_MSG_ERROR("Threads enabled but glib doesn't seem to have gthread support")
        fi
        AC_DEFINE(USE_MULTITHREAD, 1, Define if you want to have multithread support)
        AC_DEFINE(GLIB_THREADS, 1, Define if you wish to use glib threads)
fi


dnl *************
dnl Misc. setings
dnl *************

dnl
dnl Record installation paths.
dnl

AC_DEFINE_DIR([_DATADIR], [datadir],
              [Installation directory (used to determine PKGDATADIR below).])
AC_DEFINE([PKGDATADIR],[_DATADIR "/" PACKAGE],
          [The directory where the weights and databases will be stored.])

dnl
dnl internationalization macros
dnl
AM_GNU_GETTEXT([external])

dnl
dnl config files
dnl

AC_CONFIG_FILES([Makefile doc/Makefile lib/Makefile met/Makefile po/Makefile.in po/Makefile m4/Makefile xpm/Makefile sounds/Makefile board3d/Makefile textures/Makefile scripts/Makefile flags/Makefile fonts/Makefile non-src/Makefile])

dnl
dnl
dnl

AC_OUTPUT
